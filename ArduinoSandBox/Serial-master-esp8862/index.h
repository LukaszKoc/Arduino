const char * javascriptCode ="<head>\n"
"\t 	\t 	<meta charset='utf-8'>\n"
"\t 	\t 	<meta name='viewport' content='width=device-width, user-scalable=no, minimum-scale=1.0, maximum-scale=1.0'>\n"

"\t 	\t 	<style>\n"
"\t 	\t 	\t 	body {\n"
"\t 	\t 	\t 	\t 	overflow\t 	: hidden;\n"
"\t 	\t 	\t 	\t 	padding\t 	 : 0;\n"
"\t 	\t 	\t 	\t 	margin\t 	\t 	: 0;\n"
"\t 	\t 	\t 	\t 	background-color: #BBB;\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	#info {\n"
"\t 	\t 	\t 	\t 	position\t 	: absolute;\n"
"\t 	\t 	\t 	\t 	top\t 	 : 0px;\n"
"\t 	\t 	\t 	\t 	width\t 	 : 100%;\n"
"\t 	\t 	\t 	\t 	padding\t 	 : 5px;\n"
"\t 	\t 	\t 	\t 	text-align\t 	: center;\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	#info a {\n"
"\t 	\t 	\t 	\t 	color\t 	 : #66F;\n"
"\t 	\t 	\t 	\t 	text-decoration : none;\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	#info a:hover {\n"
"\t 	\t 	\t 	\t 	text-decoration : underline;\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	.pad-r {\n"
"\t 	\t 	\t 	\t 	padding-right: 50px;\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	#container {\n"
"\t 	\t 	\t 	\t 	width\t 	 : 100%;\n"
"\t 	\t 	\t 	\t 	height\t 	\t 	: 100%;\n"
"\t 	\t 	\t 	\t 	overflow\t 	: hidden;\n"
"\t 	\t 	\t 	\t 	padding\t 	 : 0;\n"
"\t 	\t 	\t 	\t 	margin\t 	\t 	: 0;\n"
"\t 	\t 	\t 	\t 	-webkit-user-select : none;\n"
"\t 	\t 	\t 	\t 	-moz-user-select\t 	: none;\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	</style>\n"
"\t 	</head>\n"
"\t 	<body>\n"
"\t 	\t 	<div id='container'></div>\n"
"\t 	\t 	<div id='info'>\n"
"\t 	\t 	\t 	Touch the screen and move\n"
"\t 	\t 	\t 	<br/>\n"
"\t 	\t 	\t 	<span id='result'></span>\n"
"\t 	\t 	\t 	<br/>\n"
"\t 	\t 	\t 	L: <span class='pad-r' id='speedL'></span> m/s\n"
"\t 	\t 	\t 	R: <span id='speedR'></span> m/s\n"
"\t 	\t 	</div>\n"
"\t 	</body>\n"
"\t 	<script>\n"
"\t 	\t 	var VirtualJoystick = function(opts) {\n"
"\t 	\t 	\t 	opts\t 	\t 	\t 	= opts\t 	\t 	\t 	|| {};\n"
"\t 	\t 	\t 	this._container\t 	 = opts.container\t 	|| document.body;\n"
"\t 	\t 	\t 	this._strokeStyle = opts.strokeStyle\t 	|| 'cyan';\n"
"\t 	\t 	\t 	this._stickEl\t 	 = opts.stickElement || this._buildJoystickStick();\n"
"\t 	\t 	\t 	this._baseEl\t 	\t 	= opts.baseElement\t 	|| this._buildJoystickBase();\n"
"\t 	\t 	\t 	this._mouseSupport\t 	= opts.mouseSupport !== undefined ? opts.mouseSupport : false;\n"
"\t 	\t 	\t 	this._stationaryBase\t 	= opts.stationaryBase || false;\n"
"\t 	\t 	\t 	this._baseX\t 	 = this._stickX = opts.baseX || 0\n"
"\t 	\t 	\t 	this._baseY\t 	 = this._stickY = opts.baseY || 0\n"
"\t 	\t 	\t 	this._limitStickTravel\t 	= opts.limitStickTravel || false\n"
"\t 	\t 	\t 	this._stickRadius = opts.stickRadius !== undefined ? opts.stickRadius : 100\n"
"\t 	\t 	\t 	this._useCssTransform = opts.useCssTransform !== undefined ? opts.useCssTransform : false\n"
"\t 	\t 	\t 	this._container.style.position\t 	= 'relative'\n"
"\t 	\t 	\t 	this._container.appendChild(this._baseEl)\n"
"\t 	\t 	\t 	this._baseEl.style.position = 'absolute'\n"
"\t 	\t 	\t 	this._baseEl.style.display\t 	= 'none'\n"
"\t 	\t 	\t 	this._container.appendChild(this._stickEl)\n"
"\t 	\t 	\t 	this._stickEl.style.position\t 	= 'absolute'\n"
"\t 	\t 	\t 	this._stickEl.style.display = 'none'\n"
"\t 	\t 	\t 	this._pressed = false;\n"
"\t 	\t 	\t 	this._touchIdx\t 	= null;\n"

"\t 	\t 	\t 	if(this._stationaryBase === true) {\n"
"\t 	\t 	\t 	\t 	this._baseEl.style.display\t 	= '';\n"
"\t 	\t 	\t 	\t 	this._baseEl.style.left\t 	 = (this._baseX - this._baseEl.width /2)+'px';\n"
"\t 	\t 	\t 	\t 	this._baseEl.style.top\t 	\t 	= (this._baseY - this._baseEl.height/2)+'px';\n"
"\t 	\t 	\t 	}\n"

"\t 	\t 	\t 	this._transform = this._useCssTransform ? this._getTransformProperty() : false;\n"
"\t 	\t 	\t 	this._has3d = this._check3D();\n"

"\t 	\t 	\t 	var __bind\t 	= function(fn, me) { return function() { return fn.apply(me, arguments); }; };\n"
"\t 	\t 	\t 	this._$onTouchStart = __bind(this._onTouchStart , this);\n"
"\t 	\t 	\t 	this._$onTouchEnd = __bind(this._onTouchEnd , this);\n"
"\t 	\t 	\t 	this._$onTouchMove\t 	= __bind(this._onTouchMove\t 	, this);\n"
"\t 	\t 	\t 	this._container.addEventListener( 'touchstart'\t 	, this._$onTouchStart , false );\n"
"\t 	\t 	\t 	this._container.addEventListener( 'touchend'\t 	, this._$onTouchEnd , false );\n"
"\t 	\t 	\t 	this._container.addEventListener( 'touchmove' , this._$onTouchMove\t 	, false );\n"
"\t 	\t 	\t 	if( this._mouseSupport ) {\n"
"\t 	\t 	\t 	\t 	this._$onMouseDown\t 	= __bind(this._onMouseDown\t 	, this);\n"
"\t 	\t 	\t 	\t 	this._$onMouseUp\t 	= __bind(this._onMouseUp\t 	, this);\n"
"\t 	\t 	\t 	\t 	this._$onMouseMove\t 	= __bind(this._onMouseMove\t 	, this);\n"
"\t 	\t 	\t 	\t 	this._container.addEventListener( 'mousedown' , this._$onMouseDown\t 	, false );\n"
"\t 	\t 	\t 	\t 	this._container.addEventListener( 'mouseup' , this._$onMouseUp\t 	, false );\n"
"\t 	\t 	\t 	\t 	this._container.addEventListener( 'mousemove' , this._$onMouseMove\t 	, false );\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype.destroy = function() {\n"
"\t 	\t 	\t 	this._container.removeChild(this._baseEl);\n"
"\t 	\t 	\t 	this._container.removeChild(this._stickEl);\n"
"\t 	\t 	\t 	this._container.removeEventListener( 'touchstart' , this._$onTouchStart , false );\n"
"\t 	\t 	\t 	this._container.removeEventListener( 'touchend'\t 	 , this._$onTouchEnd , false );\n"
"\t 	\t 	\t 	this._container.removeEventListener( 'touchmove'\t 	, this._$onTouchMove\t 	, false );\n"
"\t 	\t 	\t 	if( this._mouseSupport ) {\n"
"\t 	\t 	\t 	\t 	this._container.removeEventListener( 'mouseup'\t 	\t 	, this._$onMouseUp\t 	, false );\n"
"\t 	\t 	\t 	\t 	this._container.removeEventListener( 'mousedown'\t 	, this._$onMouseDown\t 	, false );\n"
"\t 	\t 	\t 	\t 	this._container.removeEventListener( 'mousemove'\t 	, this._$onMouseMove\t 	, false );\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.touchScreenAvailable\t 	= function() {\n"
"\t 	\t 	\t 	return 'createTouch' in document ? true : false;\n"
"\t 	\t 	}\n"
"\t 	\t 	;(function(destObj) {\n"
"\t 	\t 	\t 	destObj.addEventListener\t 	= function(event, fct) {\n"
"\t 	\t 	\t 	\t 	if(this._events === undefined)\t 	this._events\t 	= {};\n"
"\t 	\t 	\t 	\t 	this._events[event] = this._events[event] || [];\n"
"\t 	\t 	\t 	\t 	this._events[event].push(fct);\n"
"\t 	\t 	\t 	\t 	return fct;\n"
"\t 	\t 	\t 	};\n"
"\t 	\t 	\t 	destObj.removeEventListener = function(event, fct) {\n"
"\t 	\t 	\t 	\t 	if(this._events === undefined)\t 	this._events\t 	= {};\n"
"\t 	\t 	\t 	\t 	if( event in this._events === false\t 	)\t 	return;\n"
"\t 	\t 	\t 	\t 	this._events[event].splice(this._events[event].indexOf(fct), 1);\n"
"\t 	\t 	\t 	};\n"
"\t 	\t 	\t 	destObj.dispatchEvent\t 	 = function(event /* , args... */) {\n"
"\t 	\t 	\t 	\t 	if(this._events === undefined)\t 	this._events\t 	= {};\n"
"\t 	\t 	\t 	\t 	if( this._events[event] === undefined ) return;\n"
"\t 	\t 	\t 	\t 	var tmpArray\t 	= this._events[event].slice();\n"
"\t 	\t 	\t 	\t 	for(var i = 0; i < tmpArray.length; i++) {\n"
"\t 	\t 	\t 	\t 	\t 	var result\t 	= tmpArray[i].apply(this, Array.prototype.slice.call(arguments, 1))\n"
"\t 	\t 	\t 	\t 	\t 	if( result !== undefined )\t 	return result;\n"
"\t 	\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	\t 	return undefined\n"
"\t 	\t 	\t 	};\n"
"\t 	\t 	})(VirtualJoystick.prototype);\n"
"\t 	\t 	VirtualJoystick.prototype.deltaX\t 	= function() { return this._stickX - this._baseX; }\n"
"\t 	\t 	VirtualJoystick.prototype.deltaY\t 	= function() { return this._stickY - this._baseY; }\n"
"\t 	\t 	VirtualJoystick.prototype.up\t 	= function() {\n"
"\t 	\t 	\t 	if( this._pressed === false ) return false;\n"
"\t 	\t 	\t 	var deltaX\t 	= this.deltaX();\n"
"\t 	\t 	\t 	var deltaY\t 	= this.deltaY();\n"
"\t 	\t 	\t 	if( deltaY >= 0 )\t 	\t 	\t 	 return false;\n"
"\t 	\t 	\t 	if( Math.abs(deltaX) > 2*Math.abs(deltaY) ) return false;\n"
"\t 	\t 	\t 	return true;\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype.down\t 	= function() {\n"
"\t 	\t 	\t 	if( this._pressed === false ) return false;\n"
"\t 	\t 	\t 	var deltaX\t 	= this.deltaX();\n"
"\t 	\t 	\t 	var deltaY\t 	= this.deltaY();\n"
"\t 	\t 	\t 	if( deltaY <= 0 )\t 	\t 	\t 	 return false;\n"
"\t 	\t 	\t 	if( Math.abs(deltaX) > 2*Math.abs(deltaY) ) return false;\n"
"\t 	\t 	\t 	return true;\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype.right = function() {\n"
"\t 	\t 	\t 	if( this._pressed === false ) return false;\n"
"\t 	\t 	\t 	var deltaX\t 	= this.deltaX();\n"
"\t 	\t 	\t 	var deltaY\t 	= this.deltaY();\n"
"\t 	\t 	\t 	if( deltaX <= 0 )\t 	\t 	\t 	 return false;\n"
"\t 	\t 	\t 	if( Math.abs(deltaY) > 2*Math.abs(deltaX) ) return false;\n"
"\t 	\t 	\t 	return true;\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype.left\t 	= function() {\n"
"\t 	\t 	\t 	if( this._pressed === false ) return false;\n"
"\t 	\t 	\t 	var deltaX\t 	= this.deltaX();\n"
"\t 	\t 	\t 	var deltaY\t 	= this.deltaY();\n"
"\t 	\t 	\t 	if( deltaX >= 0 )\t 	\t 	\t 	 return false;\n"
"\t 	\t 	\t 	if( Math.abs(deltaY) > 2*Math.abs(deltaX) ) return false;\n"
"\t 	\t 	\t 	return true;\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onUp = function() {\n"
"\t 	\t 	\t 	this._pressed = false;\n"
"\t 	\t 	\t 	this._stickEl.style.display = 'none';\n"

"\t 	\t 	\t 	if(this._stationaryBase == false) {\n"
"\t 	\t 	\t 	\t 	this._baseEl.style.display\t 	= 'none';\n"

"\t 	\t 	\t 	\t 	this._baseX = this._baseY = 0;\n"
"\t 	\t 	\t 	\t 	this._stickX\t 	= this._stickY\t 	= 0;\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onDown = function(x, y) {\n"
"\t 	\t 	\t 	this._pressed = true;\n"
"\t 	\t 	\t 	if(this._stationaryBase == false) {\n"
"\t 	\t 	\t 	\t 	this._baseX = x;\n"
"\t 	\t 	\t 	\t 	this._baseY = y;\n"
"\t 	\t 	\t 	\t 	this._baseEl.style.display\t 	= '';\n"
"\t 	\t 	\t 	\t 	this._move(this._baseEl.style, (this._baseX - this._baseEl.width /2), (this._baseY - this._baseEl.height/2));\n"
"\t 	\t 	\t 	}\n"

"\t 	\t 	\t 	this._stickX\t 	= x;\n"
"\t 	\t 	\t 	this._stickY\t 	= y;\n"

"\t 	\t 	\t 	if(this._limitStickTravel === true) {\n"
"\t 	\t 	\t 	\t 	var deltaX\t 	= this.deltaX();\n"
"\t 	\t 	\t 	\t 	var deltaY\t 	= this.deltaY();\n"
"\t 	\t 	\t 	\t 	var stickDistance = Math.sqrt( (deltaX * deltaX) + (deltaY * deltaY) );\n"
"\t 	\t 	\t 	\t 	if(stickDistance > this._stickRadius) {\n"
"\t 	\t 	\t 	\t 	\t 	var stickNormalizedX = deltaX / stickDistance;\n"
"\t 	\t 	\t 	\t 	\t 	var stickNormalizedY = deltaY / stickDistance;\n"

"\t 	\t 	\t 	\t 	\t 	this._stickX = stickNormalizedX * this._stickRadius + this._baseX;\n"
"\t 	\t 	\t 	\t 	\t 	this._stickY = stickNormalizedY * this._stickRadius + this._baseY;\n"
"\t 	\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	}\n"

"\t 	\t 	\t 	this._stickEl.style.display = '';\n"
"\t 	\t 	\t 	this._move(this._stickEl.style, (this._stickX - this._stickEl.width /2), (this._stickY - this._stickEl.height/2));\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onMove = function(x, y) {\n"
"\t 	\t 	\t 	if( this._pressed === true ) {\n"
"\t 	\t 	\t 	\t 	this._stickX\t 	= x;\n"
"\t 	\t 	\t 	\t 	this._stickY\t 	= y;\n"

"\t 	\t 	\t 	\t 	if(this._limitStickTravel === true) {\n"
"\t 	\t 	\t 	\t 	\t 	var deltaX\t 	= this.deltaX();\n"
"\t 	\t 	\t 	\t 	\t 	var deltaY\t 	= this.deltaY();\n"
"\t 	\t 	\t 	\t 	\t 	var stickDistance = Math.sqrt( (deltaX * deltaX) + (deltaY * deltaY) );\n"
"\t 	\t 	\t 	\t 	\t 	if(stickDistance > this._stickRadius) {\n"
"\t 	\t 	\t 	\t 	\t 	\t 	var stickNormalizedX = deltaX / stickDistance;\n"
"\t 	\t 	\t 	\t 	\t 	\t 	var stickNormalizedY = deltaY / stickDistance;\n"

"\t 	\t 	\t 	\t 	\t 	\t 	this._stickX = stickNormalizedX * this._stickRadius + this._baseX;\n"
"\t 	\t 	\t 	\t 	\t 	\t 	this._stickY = stickNormalizedY * this._stickRadius + this._baseY;\n"
"\t 	\t 	\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	\t 	}\n"

"\t 	\t 	\t 	\t 	\t 	\t 	\t 	this._move(this._stickEl.style, (this._stickX - this._stickEl.width /2), (this._stickY - this._stickEl.height/2));\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onMouseUp\t 	= function(event) {\n"
"\t 	\t 	\t 	return this._onUp();\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onMouseDown\t 	= function(event) {\n"
"\t 	\t 	\t 	event.preventDefault();\n"
"\t 	\t 	\t 	var x = event.clientX;\n"
"\t 	\t 	\t 	var y = event.clientY;\n"
"\t 	\t 	\t 	return this._onDown(x, y);\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onMouseMove\t 	= function(event) {\n"
"\t 	\t 	\t 	var x = event.clientX;\n"
"\t 	\t 	\t 	var y = event.clientY;\n"
"\t 	\t 	\t 	return this._onMove(x, y);\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onTouchStart = function(event) {\n"
"\t 	\t 	\t 	if( this._touchIdx !== null ) return;\n"
"\t 	\t 	\t 	var isValid = this.dispatchEvent('touchStartValidation', event);\n"
"\t 	\t 	\t 	if( isValid === false ) return;\n"

"\t 	\t 	\t 	this.dispatchEvent('touchStart', event);\n"
"\t 	\t 	\t 	event.preventDefault();\n"
"\t 	\t 	\t 	var touch = event.changedTouches[0];\n"
"\t 	\t 	\t 	this._touchIdx\t 	= touch.identifier;\n"
"\t 	\t 	\t 	var x\t 	 = touch.pageX;\n"
"\t 	\t 	\t 	var y\t 	 = touch.pageY;\n"
"\t 	\t 	\t 	return this._onDown(x, y)\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onTouchEnd = function(event) {\n"

"\t 	\t 	\t 	if( this._touchIdx === null ) return;\n"

"\t 	\t 	\t 	this.dispatchEvent('touchEnd', event);\n"
"\t 	\t 	\t 	var touchList = event.changedTouches;\n"
"\t 	\t 	\t 	for(var i = 0; i < touchList.length && touchList[i].identifier !== this._touchIdx; i++);\n"

"\t 	\t 	\t 	if( i === touchList.length) return;\n"
"\t 	\t 	\t 	this._touchIdx\t 	= null;\n"
"\t 	\t 	event.preventDefault();\n"
"\t 	\t 	\t 	return this._onUp()\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._onTouchMove\t 	= function(event) {\n"

"\t 	\t 	\t 	if( this._touchIdx === null ) return;\n"

"\t 	\t 	\t 	var touchList = event.changedTouches;\n"
"\t 	\t 	\t 	for(var i = 0; i < touchList.length && touchList[i].identifier !== this._touchIdx; i++ );\n"

"\t 	\t 	\t 	if( i === touchList.length) return;\n"
"\t 	\t 	\t 	var touch = touchList[i];\n"
"\t 	\t 	\t 	event.preventDefault();\n"
"\t 	\t 	\t 	var x\t 	 = touch.pageX;\n"
"\t 	\t 	\t 	var y\t 	 = touch.pageY;\n"
"\t 	\t 	\t 	return this._onMove(x, y)\n"
"\t 	\t 	}\n"

"\t 	\t 	VirtualJoystick.prototype._buildJoystickBase\t 	= function() {\n"
"\t 	\t 	\t 	var canvas\t 	= document.createElement( 'canvas' );\n"
"\t 	\t 	\t 	canvas.width\t 	= 126;\n"
"\t 	\t 	\t 	canvas.height = 126;\n"

"\t 	\t 	\t 	var ctx\t 	 = canvas.getContext('2d');\n"
"\t 	\t 	\t 	ctx.beginPath();\n"
"\t 	\t 	\t 	ctx.strokeStyle = this._strokeStyle;\n"
"\t 	\t 	\t 	ctx.lineWidth = 6;\n"
"\t 	\t 	\t 	ctx.arc( canvas.width/2, canvas.width/2, 40, 0, Math.PI*2, true);\n"
"\t 	\t 	\t 	ctx.stroke();\n"
"\t 	\t 	\t 	ctx.beginPath();\n"
"\t 	\t 	\t 	ctx.strokeStyle = this._strokeStyle;\n"
"\t 	\t 	\t 	ctx.lineWidth = 2;\n"
"\t 	\t 	\t 	ctx.arc( canvas.width/2, canvas.width/2, 60, 0, Math.PI*2, true);\n"
"\t 	\t 	\t 	ctx.stroke();\n"

"\t 	\t 	\t 	return canvas;\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._buildJoystickStick = function() {\n"
"\t 	\t 	\t 	var canvas\t 	= document.createElement( 'canvas' );\n"
"\t 	\t 	\t 	canvas.width\t 	= 86;\n"
"\t 	\t 	\t 	canvas.height = 86;\n"
"\t 	\t 	\t 	var ctx\t 	 = canvas.getContext('2d');\n"
"\t 	\t 	\t 	ctx.beginPath();\n"
"\t 	\t 	\t 	ctx.strokeStyle = this._strokeStyle;\n"
"\t 	\t 	\t 	ctx.lineWidth = 6;\n"
"\t 	\t 	\t 	ctx.arc( canvas.width/2, canvas.width/2, 40, 0, Math.PI*2, true);\n"
"\t 	\t 	\t 	ctx.stroke();\n"
"\t 	\t 	\t 	return canvas;\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._move = function(style, x, y) {\n"
"\t 	\t 	\t 	if (this._transform) {\n"
"\t 	\t 	\t 	\t 	if (this._has3d) {\n"
"\t 	\t 	\t 	\t 	\t 	style[this._transform] = 'translate3d(' + x + 'px,' + y + 'px, 0)';\n"
"\t 	\t 	\t 	\t 	} else {\n"
"\t 	\t 	\t 	\t 	\t 	style[this._transform] = 'translate(' + x + 'px,' + y + 'px)';\n"
"\t 	\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	} else {\n"
"\t 	\t 	\t 	\t 	style.left = x + 'px';\n"
"\t 	\t 	\t 	\t 	style.top = y + 'px';\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	}\n"
"\t 	\t 	VirtualJoystick.prototype._getTransformProperty = function()\n"
"\t 	\t 	{\n"
"\t 	\t 	\t 	var styles = [\n"
"\t 	\t 	\t 	\t 	'webkitTransform',\n"
"\t 	\t 	\t 	\t 	'MozTransform',\n"
"\t 	\t 	\t 	\t 	'msTransform',\n"
"\t 	\t 	\t 	\t 	'OTransform',\n"
"\t 	\t 	\t 	\t 	'transform'\n"
"\t 	\t 	\t 	];\n"
"\t 	\t 	\t 	var el = document.createElement('p');\n"
"\t 	\t 	\t 	var style;\n"
"\t 	\t 	\t 	for (var i = 0; i < styles.length; i++) {\n"
"\t 	\t 	\t 	\t 	style = styles[i];\n"
"\t 	\t 	\t 	\t 	if (null != el.style[style]) {\n"
"\t 	\t 	\t 	\t 	\t 	return style;\n"
"\t 	\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	}\n"
"\t 	\t 	}\n"

"\t 	\t 	VirtualJoystick.prototype._check3D = function()\n"
"\t 	\t 	{\n"
"\t 	\t 	\t 	var prop = this._getTransformProperty();\n"

"\t 	\t 	\t 	if (!prop || !window.getComputedStyle) return module.exports = false;\n"
"\t 	\t 	\t 	var map = {\n"
"\t 	\t 	\t 	\t 	webkitTransform: '-webkit-transform',\n"
"\t 	\t 	\t 	\t 	OTransform: '-o-transform',\n"
"\t 	\t 	\t 	\t 	msTransform: '-ms-transform',\n"
"\t 	\t 	\t 	\t 	MozTransform: '-moz-transform',\n"
"\t 	\t 	\t 	\t 	transform: 'transform'\n"
"\t 	\t 	\t 	};\n"

"\t 	\t 	\t 	var el = document.createElement('div');\n"
"\t 	\t 	\t 	el.style[prop] = 'translate3d(1px,1px,1px)';\n"
"\t 	\t 	\t 	document.body.insertBefore(el, null);\n"
"\t 	\t 	\t 	var val = getComputedStyle(el).getPropertyValue(map[prop]);\n"
"\t 	\t 	\t 	document.body.removeChild(el);\n"
"\t 	\t 	\t 	var exports = null != val && val.length && 'none' != val;\n"
"\t 	\t 	\t 	return exports;\n"
"\t 	\t 	}\n"
"\t 	\t 	\t 	console.log('touchscreen is', VirtualJoystick.touchScreenAvailable() ? 'available' : 'not available');\n"

"\t 	\t 	\t 	var joystick\t 	= new VirtualJoystick({\n"
"\t 	\t 	\t 	\t 	container : document.getElementById('container'),\n"
"\t 	\t 	\t 	\t 	mouseSupport\t 	: true,\n"
"\t 	\t 	\t 	\t 	limitStickTravel\t 	: true,\n"
"\t 	\t 	\t 	});\n"
"\t 	\t 	\t 	joystick.addEventListener('touchStart', function(){\n"
"\t 	\t 	\t 	\t 	console.log('down')\n"
"\t 	\t 	\t 	})\n"
"\t 	\t 	\t 	joystick.addEventListener('touchEnd', function(){\n"
"\t 	\t 	\t 	\t 	console.log('up')\n"
"\t 	\t 	\t 	})\n"
"\t 	\t 	\t 	var prevX = 0;\n"
"\t 	\t 	\t 	var prevY = 0;\n"
"\t 	\t 	\t 	var newX = 0;\n"
"\t 	\t 	\t 	var newY = 0;\n"
"\t 	\t 	\t 	setInterval(function(){\n"
"\t 	\t 	\t 	\t 	var outputEl\t 	= document.getElementById('result');\n"
"\t 	\t 	\t 	\t 	newX = Math.round(joystick.deltaX());\n"
"\t 	\t 	\t 	\t 	newY = Math.round(joystick.deltaY()) * -1;\n"
"\t 	\t 	\t 	\t 	outputEl.innerHTML\t 	= '<b>Position:</b> '\n"
"\t 	\t 	\t 	\t 	\t 	+ ' X:'+newX\n"
"\t 	\t 	\t 	\t 	\t 	+ ' Y:'+newY;\n"
"\t 	\t 	\t 	\t 	if ( newX != prevX || newY != prevY ){\n"
"\t 	\t 	\t 	\t 	\t 	var xhr = new XMLHttpRequest();\n"
"\t 	\t 	\t 	\t 	\t 	xhr.open('PUT', './joystickCoords?x='+newX+'&y='+newY)\n"
"\t 	\t 	\t 	\t 	\t 	xhr.timeout = 1000;\n"
						"xhr.onload = function (e) { if (xhr.readyState === 4) { if (xhr.status === 200) {"
						"\t var response = JSON.parse(xhr.response); "
						"\t document.getElementById('speedL').innerHTML = response.speedL; "
						"\t document.getElementById('speedR').innerHTML = response.speedR;"
						"} } };"
"\t 	\t 	\t 	\t 	\t 	xhr.send();\n"
"\t 	\t 	\t 	\t 	}\n"
"\t 	\t 	\t 	\t 	prevX = newX;\n"
"\t 	\t 	\t 	\t 	prevY = newY;\n"
"\t 	\t 	\t 	}, 20/60 * 1000);\n"
"\t 	\t 	</script>\n"
"</html>";